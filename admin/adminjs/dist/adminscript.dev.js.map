{"version":3,"sources":["adminscript.js"],"names":["sourceIPs","destinationIPs","protocols","sourcePorts","destinationPorts","lengths","readCSV","url","fetch","then","response","text","data","parsedData","parseCSV","forEach","row","push","Source_Address","Destination_Address","Protocol","Source_Port","Destination_Port","Lengths","document","getElementById","innerHTML","join","error","rows","trim","split","headers","shift","map","values","rowData","header","index","generateBarChart","elementId","labels","label","ctx","getContext","Chart","type","datasets","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","scales","y","beginAtZero"],"mappings":"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","sourcesContent":["// Declare Empty Lists To Store Parsed Data\r\nconst sourceIPs = [];\r\nconst destinationIPs = [];\r\nconst protocols = [];\r\nconst sourcePorts = [];\r\nconst destinationPorts = [];\r\nconst lengths = [];\r\n\r\n// Function to read and parse CSV data\r\nfunction readCSV(url) {\r\n    fetch(url)\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            // Parse the CSV data\r\n            const parsedData = parseCSV(data);\r\n\r\n            // Populate the arrays with the parsed data\r\n            parsedData.forEach(row => {\r\n                sourceIPs.push(row.Source_Address);\r\n                destinationIPs.push(row.Destination_Address);\r\n                protocols.push(row.Protocol);\r\n                sourcePorts.push(row.Source_Port);\r\n                destinationPorts.push(row.Destination_Port);\r\n                lengths.push(row.Lengths);\r\n            });\r\n\r\n            // Display the stored data in HTML elements\r\n            document.getElementById('sourceIPs').innerHTML = sourceIPs.join('<br>');\r\n            document.getElementById('destinationIPs').innerHTML = destinationIPs.join('<br>');\r\n            document.getElementById('protocols').innerHTML = protocols.join('<br>');\r\n            document.getElementById('sourcePorts').innerHTML = sourcePorts.join('<br>');\r\n            document.getElementById('destinationPorts').innerHTML = destinationPorts.join('<br>');\r\n            document.getElementById('lengths').innerHTML = lengths.join('<br>');\r\n        })\r\n        .catch(error => {\r\n            // Display the stored data in HTML elements\r\n            document.getElementById('sourceIPs').innerHTML = \"Error Parsing\".join('<br>');\r\n            document.getElementById('destinationIPs').innerHTML = \"Error Parsing\".join('<br>');\r\n            document.getElementById('protocols').innerHTML = \"Error Parsing\".join('<br>');\r\n            document.getElementById('sourcePorts').innerHTML = \"Error Parsing\".join('<br>');\r\n            document.getElementById('destinationPorts').innerHTML = \"Error Parsing\".join('<br>');\r\n            document.getElementById('lengths').innerHTML = \"Error Parsing\".join('<br>');\r\n        });\r\n}\r\n\r\n// Function to parse CSV data\r\nfunction parseCSV(data) {\r\n  const rows = data.trim().split('\\n');\r\n  const headers = rows.shift().split(',');\r\n  const parsedData = rows.map(row => {\r\n      const values = row.split(',');\r\n      const rowData = {};\r\n      headers.forEach((header, index) => {\r\n          rowData[header] = values[index];\r\n      });\r\n      return rowData;\r\n  });\r\n  return parsedData;\r\n}\r\n\r\n// Function to generate a bar chart\r\nfunction generateBarChart(elementId, labels, data, label) {\r\n  var ctx = document.getElementById(elementId).getContext('2d');\r\n  new Chart(ctx, {\r\n    type: 'line',\r\n    data: {\r\n      labels: labels,\r\n      datasets: [{\r\n        label: label,\r\n        data: data,\r\n        backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n        borderColor: 'rgba(54, 162, 235, 1)',\r\n        borderWidth: 1\r\n      }]\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: true,\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// Call the readCSV function with the URL of your CSV file\r\nreadCSV('adminjs/network_data/localnetworktraffic.csv');\r\n\r\n// Generate bar charts for each feature\r\ngenerateBarChart(\"feature1Chart\", sourceIPs, lengths, \"Packet Lengths\");\r\ngenerateBarChart(\"feature2Chart\", destinationIPs, lengths, \"Packet Lengths\");\r\ngenerateBarChart(\"feature3Chart\", protocols, lengths, \"Packet Lengths\");\r\ngenerateBarChart(\"feature4Chart\", sourcePorts, lengths, \"Packet Lengths\");\r\ngenerateBarChart(\"feature5Chart\", destinationPorts, lengths, \"Packet Lengths\");"],"file":"adminscript.dev.js"}